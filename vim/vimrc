set runtimepath+=~/.dotfiles/vim,~/.dotfiles/vim/vim-pathogen
call pathogen#infect()
call pathogen#helptags()

set nocompatible

" ================ General Config ====================

set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set hlsearch                    "Highlight all occurrence of a selected word

set wildmode=longest,list,full
set wildmenu
set incsearch

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" turn on syntax highlighting
syntax on

" let loaded_netrwPlugin = 1
let g:netrw_banner = 0

let g:SuperTabDefaultCompletionType = "context"

" ================= Ag Line =====================
set runtimepath^=~/.dotfiles/vim/bundle/ag.vim

" ================= Status Line =====================
set laststatus=2

" ================ Turn Off Swap Files ==============
set noswapfile
set nobackup
set nowb

" ================ Indentation ======================
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

command Paste execute 'set noai | insert | set ai'

if &diff
    "set cursorline
    map ] ]c
    map [ [c
endif

" ================ Tagbar ===========================

map <F8> :TagbarToggle<CR>
" open a Tagbar automatically when vim starts up
" autocmd vimenter * Tagbar

" ================= Buffer Line =========================
let g:lightline = {
  \ 'colorscheme': 'wombat',
  \ 'active': {
  \   'left': [ [ 'mode', 'paste' ], [ 'filename' ], [ 'bufferline' ] ],
  \ }
  \ }

" ================= Auto Paste =========================
function! WrapForTmux(s)  
  if !exists('$TMUX')
    return a:s
  endif

  let tmux_start = "\<Esc>Ptmux;"
  let tmux_end = "\<Esc>\\"

  return tmux_start . substitute(a:s, "\<Esc>", "\<Esc>\<Esc>", 'g') . tmux_end
endfunction

let &t_SI .= WrapForTmux("\<Esc>[?2004h")
let &t_EI .= WrapForTmux("\<Esc>[?2004l")

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()
